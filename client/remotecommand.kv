BoxLayout:
    orientation: 'vertical'
    BoxLayout:
        size_hint_y: None
        height: '35sp'

        TextInput:
            mutiline: False
            id: address
            on_text_validate:
                self.focus = False
                port.focus = True
            on_touch_up: app.propose_addresses(self)
            on_text: app.propose_addresses(self)

        TextInput:
            multiline: False
            id: port
            on_text_validate: app.connect(address.text, port.text)

        Button:
            text: 'connect'
            size_hint_x: None
            width: self.texture_size[0] + dp(2)
            on_press: app.connect(address.text, port.text)

    TabbedPanel:
        do_default_tab: False
        TabbedPanelItem:
            text: 'commands'
            ScrollView:
                do_scroll_x: False
                do_scroll_y: True

                BoxLayout:
                    orientation: 'vertical'
                    BoxLayout:
                        on_parent: app.container = self
                        orientation: 'vertical'
                        size_hint_y: None
                        height: sum((x.height for x in self.children))
                        Button:
                            text: 'placeholder'

        TabbedPanelItem:
            text: 'image'
            BoxLayout:
                BoxLayout:
                    orientation: 'vertical'
                    size_hint_x: None
                    width: '50sp'

                    Label:
                        text: 'capture images'
                        text_size: self.parent.width, None
                        size_hint_y: None
                        height: self.texture_size[1]

                    CheckBox:
                        value: app.capture_images
                        on_active:
                            app.capture_images = self.active
                        size_hint_y: None
                        height: 20

                    Slider:
                        id: image_size_slider
                        orientation: 'vertical'
                        min: 6
                        max: 9
                        step: 1
                        value: 8
                        on_value:
                            print self.value, 2 ** self.value
                            app.image_size = int(2 ** self.value)
                    Label:
                        size_hint_y: None
                        height: 50
                        text: '%s\n%s' % (image_size_slider.value, app.image_size)
                Image:
                    on_parent: app.screen_texture = self
                    allow_stretch: True
                    source: 'tmp.bmp'

    TabbedPanel:
        size_hint_y: .4
        do_default_tab: False
        TabbedPanelItem:
            text: 'mouse'
            BoxLayout:
                BoxLayout:
                    size_hint_x: None
                    width: slabel.width
                    orientation: 'vertical'

                    Label:
                        id: slabel
                        text: 'sensivity'
                        width: self.texture_size[0]
                    Slider:
                        id: mslider
                        orientation: 'vertical'
                        value: app.mouse_sensivity
                        on_value: app.mouse_sensivity = self.value
                        min: 0.1
                        max: 10
                    Label:
                        text:  str(round(mslider.value, 4))
                        width: self.texture_size[0]

                MousePad:
                    canvas:
                        Color:
                            rgba: .9, .9, .9, .9
                        Rectangle:
                            pos: self.pos
                            size: self.size

                BoxLayout:
                    size_hint_x: None
                    width: dp(50)
                    orientation: 'vertical'
                    Button:
                        text: 'double\nclick'
                        on_press: app.mouse_click(n=2)
                    Button:
                        text: 'click'
                        on_press: app.mouse_press()
                        on_release: app.mouse_release()
                    Button:
                        text: 'right\nclick'
                        on_press: app.mouse_press(b=2)
                        on_release: app.mouse_release(b=2)

        TabbedPanelItem:
            text: 'keyboard'
            BoxLayout:
                orientation: 'vertical'
                BoxLayout:
                    size_hint_y: None
                    height: dp(30)
                    TextInput:
                        multiline: False
                        on_text_validate:
                            app.send_keys(self.text)
                            self.text = ''
                GridLayout:
                    cols: 13
                    on_parent: app.populate_keyboard(self)

        TabbedPanelItem:
            text: 'status'
            ScrollView:
                BoxLayout:
                    orientation: 'vertical'
                    on_parent: app.status = self

        TabbedPanelItem:
            text: 'logs'
            ScrollView:
                Label:
                    size_hint_y: None
                    text_size: self.width, None
                    height: self.texture_size[1]
                    text: app.log

                    canvas:
                        Color:
                            rgba: .3, .3, .3, .5
                        Rectangle:
                            pos: 0, 0
                            size: self.width, self.top

